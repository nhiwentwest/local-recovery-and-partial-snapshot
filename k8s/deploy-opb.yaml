apiVersion: apps/v1
kind: Deployment
metadata:
  name: opb
  namespace: hpb
spec:
  replicas: 2
  selector:
    matchLabels:
      app: opb
  template:
    metadata:
      labels:
        app: opb
    spec:
      containers:
      - name: opb
        image: ghcr.io/your-org/hpb-opb:latest
        imagePullPolicy: IfNotPresent
        args:
          - "--http"
          - ":8080"
          - "--kafka-bootstrap"
          - "kafka:9092"
          - "--input-source"
          - "kafka"
          - "--group-id"
          - "opb-g1"
          - "--topic-enriched"
          - "p2.orders.enriched"
          - "--output-topic"
          - "p2.orders.output"
          - "--output-tx-id"
          - "opb-k8s"
          - "--state-backend"
          - "badger"
          - "--badger-dir"
          - "/data"
          - "--window-size"
          - "60"
          - "--manifest-sink"
          - "both"
          - "--changelog-sink"
          - "both"
          - "--manifest-source"
          - "kafka"
          - "--changelog-source"
          - "kafka"
          - "--snapshot-interval"
          - "30"
          - "--instance-id"
          - "$(POD_NAME)"
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        ports:
        - containerPort: 8080
          name: http
        volumeMounts:
        - name: data
          mountPath: /data
        readinessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
      volumes:
      - name: data
        emptyDir: {}


